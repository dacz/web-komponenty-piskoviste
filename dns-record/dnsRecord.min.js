customElements.define("dns-record",class o extends HTMLElement{static observedAttributes=["data-status","data-nocopy"];#o=!0;#n=!1;constructor(){super();const n=document.createElement("template");n.innerHTML=o.templateContent;this.attachShadow({mode:"open"}).appendChild(n.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("[data-type='hostname']").innerText=this.querySelector("[data-type='hostname']").innerContent||this.querySelector("[data-type='hostname']").innerText,this.shadowRoot.querySelector("[data-type='domain']").innerText=this.querySelector("[data-type='domain']").innerContent||this.querySelector("[data-type='domain']").innerText,this.shadowRoot.querySelector("[data-type='kind']").innerText=this.querySelector("[data-type='kind']").innerContent||this.querySelector("[data-type='kind']").innerText,this.shadowRoot.querySelector("[data-type='value']").innerText=this.querySelector("[data-type='value']").innerContent||this.querySelector("[data-type='value']").innerText,this.setClassesOnAttributes(),!this.#n&&this.setClickHandlers()}disconnectedCallback(){this.resetClickHandlers(),this.#o&&console.log("Custom element removed from page.")}adoptedCallback(){this.#o&&console.log("Custom element moved to new page.")}attributeChangedCallback(o,n,t){this.#o&&console.log(`Attribute ${o} has changed.`),this.setClassesOnAttributes(),this.resetClickHandlers(),!this.#n&&this.setClickHandlers()}async addToClipboard(n){const t=n.srcElement.textContent||n.srcElement.innerText;try{navigator.clipboard.writeText(t);const e=n.srcElement;e.classList.add("copied"),await o.wait(100),e.classList.remove("copied"),console.log("Copied the text: "+t)}catch(o){console.error("Async: Could not copy text to clipboard: ",o)}}setClassesOnAttributes(){const o=this.getAttribute("data-status");this.#n=this.hasAttribute("data-nocopy"),"ok"==o||this.#n||(this.#n=!0);const n=this.shadowRoot.querySelector(".dns-record");n.classList.remove("ok","warn","error"),o&&n.classList.add(o),this.#n?n.classList.add("nocopy"):n.classList.remove("nocopy")}setClickHandlers(){if(!navigator?.clipboard)return void(this.#o&&console.error("Clipboard API not supported"));this.shadowRoot.querySelectorAll(".copyable").forEach((o=>{o.addEventListener("click",this.addToClipboard)}))}resetClickHandlers(){if(!navigator?.clipboard)return void(this.#o&&console.error("Clipboard API not supported"));this.shadowRoot.querySelectorAll(".copyable").forEach((o=>o.removeEventListener("click",this.addToClipboard)))}static async wait(o){return new Promise((n=>{setTimeout(n,o)}))}static templateContent='\n  <style>\n      .dns-record {\n          --mainFont: \'Courier New\', Courier, monospace;\n          --normalFont: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n          --baseFontSize: 18px;\n          --mainColor: black;\n          --subtleColor: #bababa;\n          --okColor: rgb(242, 255, 242);\n          --warnColor: rgb(255, 247, 231);\n          --errorColor: rgb(255, 223, 223);\n          --unknownColor: rgb(246, 246, 246);\n          --tooltipColor: white;\n          --tooltipBgColor: rgb(32, 32, 32);\n          display: flex;\n          flex-direction: row;\n          align-items: stretch;\n          border: 1px solid var(--subtleColor);\n          border-radius: 0.5rem;\n          width: max-content;\n          max-width: 100%;\n          color: var(--mainColor);\n          background-color: var(--unknownColor);\n          transition: background-color .0005s step-end;\n      }\n  \n      .dns-record.ok {\n          background-color: var(--okColor);\n      }\n  \n      .dns-record.warn {\n          background-color: var(--warnColor);\n      }\n  \n      .dns-record.error {\n          background-color: var(--errorColor);\n      }\n  \n      .dns-record span {\n          padding: 0.5rem 0.75rem;\n          font-family: var(--mainFont);\n          font-size: var(--baseFontSize);\n      }\n  \n      .dns-record .hostname {\n          border-right: 1px solid var(--subtleColor);\n          font-weight: bold;\n          cursor: pointer;\n      }\n  \n      .dns-record .domain {\n          border-right: 1px solid var(--subtleColor);\n      }\n  \n      .dns-record .kind {\n          border-right: 1px solid var(--subtleColor);\n          font-weight: bold;\n      }\n  \n      .dns-record .cbc {\n          cursor: pointer;\n          width: auto;\n          user-select: none;\n          padding: 0;\n      }\n  \n      .dns-record .value {\n          font-weight: bold;\n          cursor: pointer;\n      }\n  \n      .nocopy .value,\n      .nocopy .hostname {\n          cursor: initial;\n      }\n  \n      .tooltip {\n          position: relative;\n          font-weight: normal;\n      }\n  \n      .tooltip:before {\n          content: attr(data-copy);\n          font-family: var(--normalFont);\n          font-size: 0.8rem;\n          font-weight: normal;\n          position: absolute;\n          top: 100%;\n          left: 8px;\n          transform: translateY(8px);\n          width: auto;\n          padding: 0.5rem;\n          border-radius: 0.4rem;\n          background: var(--tooltipBgColor);\n          color: var(--tooltipColor);\n          text-align: center;\n          display: none;\n      }\n  \n      .tooltip:after {\n          content: "";\n          position: absolute;\n          left: 1.5rem;\n          margin-left: -5px;\n          top: 100%;\n          transform: translateY(-10px);\n          border: 10px solid var(--tooltipBgColor);\n          border-color: transparent transparent var(--tooltipBgColor) transparent;\n          display: none;\n      }\n  \n      .tooltip:hover:before,\n      .tooltip:hover:after {\n          display: block;\n      }\n  \n      .nocopy .tooltip:hover:before,\n      .nocopy .tooltip:hover:after {\n          display: none;\n      }\n  \n      .copied {\n          background-color: rgba(0, 128, 0, 0.518) !important;\n          color: white !important;\n          transition: background-color .1s ease-in;\n      }\n  </style>\n  <div class="dns-record">\n      <span class="hostname tooltip copyable" data-copy="Click to copy to clipboard"\n          data-type="hostname"></span>\n      <span class="domain" data-type="domain"></span>\n      <span class="kind" data-type="kind"></span>\n      <span class="value tooltip copyable" data-copy="Click to copy to clipboard"\n          data-type="value"></span>\n  </div>\n  '});